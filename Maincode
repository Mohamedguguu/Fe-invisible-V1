-- Configuration Section - **[ENHANCED UI CONFIG - GREAT UI Update + NoClip + Speed Textbox + L-Key Load + v1.1 + More Features]**
local scriptVersion = "v1.1" -- **[NEW] Version Number**

local primaryColor = Color3.fromRGB(50, 50, 50) -- Base button color
local secondaryColor = Color3.fromRGB(75, 75, 75) -- Slightly lighter for frame/accents
local highlightColor = Color3.fromRGB(100, 100, 100) -- Hover/selected color
local adminColor = Color3.fromRGB(120, 90, 90) -- **[NEW] Color for Admin Buttons**
local adminFrameColor = Color3.fromRGB(85, 65, 65) -- **[NEW] Color for Admin Frame**
local textColor = Color3.White
local cornerRadius = UDim.new(0.1, 0) -- Consistent corner radius

local buttonFont = Enum.Font.SourceSansBold
local tooltipTextSize = 14
local buttonTextSize = 16

local buttonSize = UDim2.new(0, 95, 0, 30) -- Slightly wider buttons with text
local buttonSpacingX = 10 -- Spacing between buttons in a row
local buttonSpacingY = 10 -- Spacing between rows of buttons
local framePaddingX = 15 -- Padding inside the frame
local framePaddingY = 15
local buttonsPerRow = 3 -- How many buttons per row before wrapping

local buttonsFrameSize = UDim2.new(0, (buttonSize.X.Offset + buttonSpacingX) * buttonsPerRow + 2 * framePaddingX - buttonSpacingX, 0, 350) -- **[ADJUSTED HEIGHT]** Increased frame height for new features
local buttonsFramePosition = UDim2.new(1, -320, 0, 10) -- Adjust frame position if needed

local hideUIButtonPosition = UDim2.new(0, framePaddingX, 0, framePaddingY) -- First button position in frame
local unloadButtonPosition = UDim2.new(0, hideUIButtonPosition.X.Offset + buttonSize.X.Offset + buttonSpacingX, 0, framePaddingY) -- Position next to hide button
local debugButtonPosition = UDim2.new(0, unloadButtonPosition.X.Offset + buttonSize.X.Offset + buttonSpacingX, 0, framePaddingY) -- Position next to unload button
local invisButtonPosition = UDim2.new(0, framePaddingX, 0, hideUIButtonPosition.Y.Offset + buttonSize.Y.Offset + buttonSpacingY) -- New row
local methodButton1Position = UDim2.new(0, invisButtonPosition.X.Offset + buttonSize.X.Offset + buttonSpacingX, 0, invisButtonPosition.Y.Offset)
local methodButton2Position = UDim2.new(0, methodButton1Position.X.Offset + buttonSize.X.Offset + buttonSpacingX, 0, methodButton1Position.Y.Offset) -- **[NEW] Method 2 Button Position**
local fakeCharacterButtonPosition =  UDim2.new(0, framePaddingX, 0, methodButton1Position.Y.Offset + buttonSize.Y.Offset + buttonSpacingY) -- New Row
local noclipButtonPosition = UDim2.new(0, framePaddingX, 0, fakeCharacterButtonPosition.Y.Offset + buttonSize.Y.Offset + buttonSpacingY) -- New Row
local keybindsTextBoxPosition = UDim2.new(0, noclipButtonPosition.X.Offset + buttonSize.X.Offset + buttonSpacingX, 0, noclipButtonPosition.Y.Offset)
local walkSpeedTextBoxPosition = UDim2.new(0, keybindsTextBoxPosition.X.Offset + buttonSize.X.Offset + buttonSpacingX, 0, walkSpeedTextBoxPosition.Y.Offset) -- Adjusted


local adminFramePosition = UDim2.new(0, framePaddingX, 0, noclipButtonPosition.Y.Offset + (2 * (buttonSize.Y.Offset + buttonSpacingY))) -- **[NEW] Admin Frame Position, deeper new row**
local adminFrameSize = UDim2.new(0, buttonsFrameSize.X.Offset - (2*framePaddingX), 0, 50) -- **[NEW] Admin Frame Size**
local serverInvisButtonPosition = UDim2.new(0, framePaddingX, 0, framePaddingY) -- **[NEW] Server Invis Button position inside Admin Frame**


local moreWillComeLabelYOffset = 15 -- Closer to the bottom
local moreWillComeLabelSize = UDim2.new(0, 220, 0, 25) -- Slightly wider label
local summonUIButtonSize = UDim2.new(0, 150, 0, 40) -- Wider summon button


local buttonClickSoundId = "rbxassetid://232127604"
local seatAreaReturnEnabled = true
local seatAreaDistanceThreshold = 10
local DEBUG_MODE = true


-- Feature toggles
local invis_enabled = true
local fake_character_enabled = false
local keybind_enabled = true
local walkspeed_boost_enabled = false
local noclip_enabled = false -- Feature toggle
local server_invis_enabled = false -- **[NEW] Server Invis Toggle**
local originalCharacterColor = nil
local fakeCharacterModel = nil
local seatTeleportPosition = Vector3.new(-25.95, 84, 3537.55)
local seatTeleportPositionMethod2 = Vector3.new(-25.95, 84, 3547.55) -- **[NEW] Method 2 Position**
local currentSeatPosition = nil
local seatReturnHeartbeat = nil


-- Keybinds Configuration
local keybinds = {
    toggle_invis = Enum.KeyCode.Z,
    toggle_fake_character = Enum.KeyCode.N,
    toggle_walkspeed_boost = Enum.KeyCode.B,
    hide_ui = Enum.KeyCode.K,
    toggle_noclip = Enum.KeyCode.X, -- **[NEW - NoClip Keybind]**
    load_ui = Enum.KeyCode.L, -- **[NEW - Load UI Keybind]**
    switch_method = Enum.KeyCode.M -- **[NEW] Switch Method Keybind**
}


--// don't edit script below - unless you are doing ;)
local invis_on = false
local current_method = 1
local ui_hidden = false
local screenGui = nil
local userInputService = game:GetService("UserInputService")
local player = game.Players.LocalPlayer
local buttonClickSound = nil
local runService = game:GetService("RunService")


-- **Function to LOAD the UI and script (Loader Function)**
local function loadInvisUI()
    if screenGui then
        if DEBUG_MODE then print("LoadInvisUI: UI already exists, destroying old UI...") end
        screenGui:Destroy()
    end


    game.StarterGui:SetCore("SendNotification", {
        Title = "Loading Invis UI " .. scriptVersion; -- **[NEW] Version in Load Notification**
        Duration = 2;
        Text = "Creating and initializing UI elements...";
    })


    --// Create UI elements (UI creation code)
    screenGui = Instance.new("ScreenGui")
    screenGui.DisplayOrder = 10
    screenGui.ResetOnSpawn = false

    local buttonsFrame = Instance.new("Frame")
    local invisButton = Instance.new("TextButton")
    local unloadButton = Instance.new("TextButton")
    local debugButton = Instance.new("TextButton")
    local methodButton1 = Instance.new("TextButton")
    local methodButton2 = Instance.new("TextButton") -- **[NEW] Method 2 Button**
    local hideUIButton = Instance.new("TextButton")
    local fakeCharacterButton = Instance.new("TextButton")
    local howDoesItWorkLabel = Instance.new("TextButton")
    local moreWillComeLabel = Instance.new("TextLabel")
    local keybindToggleButton = Instance.new("TextButton")
    local walkSpeedBoostButton = Instance.new("TextButton")
    local summonUIButton = Instance.new("TextButton")
    local keybindsTextBox = Instance.new("TextBox") -- **[NEW] Keybinds TextBox**
    local walkSpeedTextBox = Instance.new("TextBox") -- **[NEW] Walk Speed Textbox**
    local noclipButton = Instance.new("TextButton") -- **[NEW] NoClip Button**

    local adminFrame = Instance.new("Frame") -- **[NEW] Admin Frame**
    local serverInvisButton = Instance.new("TextButton") -- **[NEW] Server Invis Button**


    local uicorner_frame = Instance.new("UICorner")
    local uicorner_invis = Instance.new("UICorner")
    local uicorner_unload = Instance.new("UICorner")
    local uicorner_debug = Instance.new("UICorner")
    local uicorner_method1 = Instance.new("UICorner")
    local uicorner_method2 = Instance.new("UICorner") -- **[NEW] Method 2 UICorner**
    local uicorner_hideUI = Instance.new("UICorner")
    local uicorner_fakeCharacter = Instance.new("UICorner")
    local uicorner_keybindToggle = Instance.new("UICorner")
    local uicorner_walkSpeedBoost = Instance.new("UICorner")
    local uicorner_summonUI = Instance.new("UICorner")
    local uicorner_keybindsTextBox = Instance.new("UICorner") -- **[NEW] Keybinds TextBox UICorner**
    local uicorner_walkSpeedTextBox = Instance.new("UICorner") -- **[NEW] Walk Speed Textbox UICorner**
    local uicorner_noclip = Instance.new("UICorner") -- **[NEW] NoClip Button UICorner**
    local uicorner_adminFrame = Instance.new("UICorner") -- **[NEW] Admin Frame UICorner**
    local uicorner_serverInvis = Instance.new("UICorner") -- **[NEW] Server Invis Button UICorner**


    local tooltipLabel_invis = Instance.new("TextLabel")
    local tooltipLabel_unload = Instance.new("TextLabel")
    local tooltipLabel_debug = Instance.new("TextLabel")
    local tooltipLabel_method1 = Instance.new("TextLabel")
    local tooltipLabel_method2 = Instance.new("TextLabel") -- **[NEW] Method 2 Tooltip**
    local tooltipLabel_hideUI = Instance.new("TextLabel")
    local tooltipLabel_fakeCharacter = Instance.new("TextLabel")
    local tooltipLabel_howDoesItWork = Instance.new("TextLabel")
    local tooltipLabel_keybindToggle = Instance.new("TextLabel")
    local tooltipLabel_walkSpeedBoost = Instance.new("TextLabel")
    local tooltipLabel_keybindsTextBox = Instance.new("TextLabel") -- **[NEW] Keybinds TextBox Tooltip**
    local tooltipLabel_walkSpeedTextBox = Instance.new("TextLabel") -- **[NEW] Walk Speed Textbox Tooltip**
    local tooltipLabel_noclip = Instance.new("TextLabel") -- **[NEW] NoClip Button Tooltip**
    local tooltipLabel_serverInvis = Instance.new("TextLabel") -- **[NEW] Server Invis Button Tooltip**


    -- **Button Click Sound Setup**
    buttonClickSound = Instance.new("Sound")
    buttonClickSound.SoundId = buttonClickSoundId
    buttonClickSound.Volume = 0.5
    buttonClickSound.Parent = screenGui


    -- UI Element Properties
    screenGui.Parent = player:WaitForChild("PlayerGui")
    screenGui.Name = "InvisScreenGui"
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    -- **Buttons Frame Properties**
    buttonsFrame.Parent = screenGui
    buttonsFrame.Size = buttonsFrameSize
    buttonsFrame.Position = buttonsFramePosition
    buttonsFrame.BackgroundColor3 = secondaryColor -- Use secondary color
    buttonsFrame.BackgroundTransparency = 0.7 -- Slightly more transparent
    buttonsFrame.BorderSizePixel = 0
    buttonsFrame.Name = "ButtonsFrame"
    buttonsFrame.ClipsDescendants = true

    uicorner_frame.Parent = buttonsFrame
    uicorner_frame.CornerRadius = cornerRadius

    -- **Admin Frame Properties** **[NEW Admin Frame Properties]**
    adminFrame.Parent = buttonsFrame
    adminFrame.Size = adminFrameSize
    adminFrame.Position = adminFramePosition
    adminFrame.BackgroundColor3 = adminFrameColor -- Use admin frame color
    adminFrame.BackgroundTransparency = 0.7 -- Slightly more transparent
    adminFrame.BorderSizePixel = 0
    adminFrame.Name = "AdminFrame"
    adminFrame.ClipsDescendants = true

    uicorner_adminFrame.Parent = adminFrame
    uicorner_adminFrame.CornerRadius = cornerRadius


    -- **Hide UI Button Properties**
    hideUIButton.Parent = buttonsFrame
    hideUIButton.Size = buttonSize
    hideUIButton.Position = hideUIButtonPosition
    hideUIButton.Font = buttonFont -- Use font variable
    hideUIButton.Text = "Hide UI" -- Text Label!
    hideUIButton.BackgroundColor3 = primaryColor -- Use primary color
    hideUIButton.BackgroundTransparency = 0.5
    hideUIButton.BorderSizePixel = 0
    hideUIButton.Name = "HideUIButton"
    hideUIButton.AutoButtonColor = false
    hideUIButton.ClipsDescendants = true
    hideUIButton.TextSize = buttonTextSize -- Use size variable
    hideUIButton.TextColor3 = textColor -- Use text color variable

    uicorner_hideUI.Parent = hideUIButton
    uicorner_hideUI.CornerRadius = cornerRadius

    -- **Unload Button Properties**
    unloadButton.Parent = buttonsFrame
    unloadButton.Size = buttonSize
    unloadButton.Position = unloadButtonPosition
    unloadButton.Font = buttonFont
    unloadButton.Text = "Unload" -- Text Label!
    unloadButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0) -- Keep red for unload
    unloadButton.BackgroundTransparency = 0.5
    unloadButton.BorderSizePixel = 0
    unloadButton.Name = "UnloadButton"
    unloadButton.AutoButtonColor = false
    unloadButton.ClipsDescendants = true
    unloadButton.TextSize = buttonTextSize
    unloadButton.TextColor3 = textColor

    uicorner_unload.Parent = unloadButton
    uicorner_unload.CornerRadius = cornerRadius

    -- **Debug Button Properties**
    debugButton.Parent = buttonsFrame
    debugButton.Size = buttonSize
    debugButton.Position = debugButtonPosition
    debugButton.Font = buttonFont
    debugButton.Text = "Debug" -- Text Label!
    debugButton.BackgroundColor3 = Color3.fromRGB(200, 200, 0) -- Keep yellow for debug
    debugButton.BackgroundTransparency = 0.5
    debugButton.BorderSizePixel = 0
    debugButton.Name = "DebugButton"
    debugButton.AutoButtonColor = false
    debugButton.ClipsDescendants = true
    debugButton.TextSize = buttonTextSize
    debugButton.TextColor3 = textColor

    uicorner_debug.Parent = debugButton
    uicorner_debug.CornerRadius = cornerRadius

    -- **Invis Button Properties**
    invisButton.Parent = buttonsFrame
    invisButton.Size = buttonSize
    invisButton.Position = invisButtonPosition -- Move to the next row in first column
    invisButton.Font = buttonFont
    invisButton.Text = "Invis: Off" -- More descriptive text
    invisButton.BackgroundColor3 = primaryColor
    invisButton.BackgroundTransparency = 0.5
    invisButton.BorderSizePixel = 0
    invisButton.Name = "InvisButton"
    invisButton.AutoButtonColor = false
    invisButton.ClipsDescendants = true
    invisButton.TextSize = buttonTextSize
    invisButton.TextColor3 = textColor

    uicorner_invis.Parent = invisButton
    uicorner_invis.CornerRadius = cornerRadius


    -- **Method 1 Button (Seat) Properties**
    methodButton1.Parent = buttonsFrame
    methodButton1.Size = buttonSize
    methodButton1.Position = methodButton1Position -- Position in the next column
    methodButton1.Font = buttonFont
    methodButton1.Text = "Method 1: Seat" -- **[UPDATED TEXT]**
    methodButton1.BackgroundColor3 = primaryColor
    methodButton1.BackgroundTransparency = 0.5
    methodButton1.BorderSizePixel = 0
    methodButton1.Name = "MethodButton1"
    methodButton1.AutoButtonColor = false
    methodButton1.ClipsDescendants = true
    methodButton1.TextSize = buttonTextSize
    methodButton1.TextColor3 = textColor

    uicorner_method1.Parent = methodButton1
    uicorner_method1.CornerRadius = cornerRadius

    -- **Method 2 Button (Box) Properties** **[NEW Method 2 Button]**
    methodButton2.Parent = buttonsFrame
    methodButton2.Size = buttonSize
    methodButton2.Position = methodButton2Position -- Position in the next column
    methodButton2.Font = buttonFont
    methodButton2.Text = "Method 2: Box" -- **[NEW TEXT]**
    methodButton2.BackgroundColor3 = primaryColor
    methodButton2.BackgroundTransparency = 0.5
    methodButton2.BorderSizePixel = 0
    methodButton2.Name = "MethodButton2"
    methodButton2.AutoButtonColor = false
    methodButton2.ClipsDescendants = true
    methodButton2.TextSize = buttonTextSize
    methodButton2.TextColor3 = textColor

    uicorner_method2.Parent = methodButton2
    uicorner_method2.CornerRadius = cornerRadius


    -- **Fake Character Button Properties**
    fakeCharacterButton.Parent = buttonsFrame
    fakeCharacterButton.Size = buttonSize
    fakeCharacterButton.Position = fakeCharacterButtonPosition -- Position in the next row
    fakeCharacterButton.Font = buttonFont
    fakeCharacterButton.Text = "Fake Char: Off" -- More descriptive text
    fakeCharacterButton.BackgroundColor3 = primaryColor
    fakeCharacterButton.BackgroundTransparency = 0.5
    fakeCharacterButton.BorderSizePixel = 0
    fakeCharacterButton.Name = "FakeCharacterButton"
    fakeCharacterButton.AutoButtonColor = false
    fakeCharacterButton.ClipsDescendants = true
    fakeCharacterButton.TextSize = buttonTextSize
    fakeCharacterButton.TextColor3 = textColor

    uicorner_fakeCharacter.Parent = fakeCharacterButton
    uicorner_fakeCharacter.CornerRadius = cornerRadius


    -- **Keybind Toggle Button Properties**
    keybindToggleButton.Parent = buttonsFrame
    keybindToggleButton.Size = buttonSize
    keybindToggleButton.Position = keybindToggleButtonPosition -- Same row
    keybindToggleButton.Font = buttonFont
    keybindToggleButton.Text = "Keybinds: On" -- Assuming default is on, adjust text later in logic
    keybindToggleButton.BackgroundColor3 = primaryColor
    keybindToggleButton.BackgroundTransparency = 0.5
    keybindToggleButton.BorderSizePixel = 0
    keybindToggleButton.Name = "KeybindToggleButton"
    keybindToggleButton.AutoButtonColor = false
    keybindToggleButton.ClipsDescendants = true
    keybindToggleButton.TextSize = buttonTextSize
    keybindToggleButton.TextColor3 = textColor

    uicorner_keybindToggle.Parent = keybindToggleButton
    uicorner_keybindToggle.CornerRadius = cornerRadius

    -- **Walk Speed Boost Button Properties**
    walkSpeedBoostButton.Parent = buttonsFrame
    walkSpeedBoostButton.Size = buttonSize
    walkSpeedBoostButton.Position = walkSpeedBoostButtonPosition -- Same row
    walkSpeedBoostButton.Font = buttonFont
    walkSpeedBoostButton.Text = "Speed Boost: Off"
    walkSpeedBoostButton.BackgroundColor3 = primaryColor
    walkSpeedBoostButton.BackgroundTransparency = 0.5
    walkSpeedBoostButton.BorderSizePixel = 0
    walkSpeedBoostButton.Name = "WalkSpeedBoostButton"
    walkSpeedBoostButton.AutoButtonColor = false
    walkSpeedBoostButton.ClipsDescendants = true
    walkSpeedBoostButton.TextSize = buttonTextSize
    walkSpeedBoostButton.TextColor3 = textColor

    uicorner_walkSpeedBoost.Parent = walkSpeedBoostButton
    uicorner_walkSpeedBoost.CornerRadius = cornerRadius

    -- **NoClip Button Properties** **[NEW - NoClip Button]**
    noclipButton.Parent = buttonsFrame
    noclipButton.Size = buttonSize
    noclipButton.Position = noclipButtonPosition -- New Row
    noclipButton.Font = buttonFont
    noclipButton.Text = "NoClip: Off"
    noclipButton.BackgroundColor3 = primaryColor
    noclipButton.BackgroundTransparency = 0.5
    noclipButton.BorderSizePixel = 0
    noclipButton.Name = "NoClipButton"
    noclipButton.AutoButtonColor = false
    noclipButton.ClipsDescendants = true
    noclipButton.TextSize = buttonTextSize
    noclipButton.TextColor3 = textColor

    uicorner_noclip.Parent = noclipButton
    uicorner_noclip.CornerRadius = cornerRadius


    -- **Keybinds TextBox Properties** **[NEW Textbox Properties]**
    keybindsTextBox.Parent = buttonsFrame
    keybindsTextBox.Size =  UDim2.new(0, (buttonsFrameSize.X.Offset / 2) - framePaddingX - (buttonSpacingX / 2), 0, 30) -- **[ADJUSTED SIZE & POSITION]**  Half width of frame
    keybindsTextBox.Position = keybindsTextBoxPosition
    keybindsTextBox.AnchorPoint = Vector2.new(0, 0) -- Anchor to top left within the frame
    keybindsTextBox.Font = buttonFont
    keybindsTextBox.TextSize = buttonTextSize - 2 -- Slightly smaller textbox text
    keybindsTextBox.PlaceholderText = "Edit Keybinds (Z,N,K,B,X,M,L)" -- **[UPDATED PLACEHOLDER]**
    keybindsTextBox.ClearTextOnFocus = false
    keybindsTextBox.BackgroundColor3 = primaryColor
    keybindsTextBox.BackgroundTransparency = 0.5
    keybindsTextBox.TextColor3 = textColor
    keybindsTextBox.BorderSizePixel = 0
    keybindsTextBox.Name = "KeybindsTextBox"
    keybindsTextBox.ClipsDescendants = true

    uicorner_keybindsTextBox.Parent = keybindsTextBox
    uicorner_keybindsTextBox.CornerRadius = cornerRadius

    -- **Walk Speed Textbox Properties** **[NEW Textbox for Speed]**
    walkSpeedTextBox.Parent = buttonsFrame
    walkSpeedTextBox.Size = UDim2.new(0, (buttonsFrameSize.X.Offset / 2) - framePaddingX - (buttonSpacingX / 2), 0, 30) -- **[ADJUSTED SIZE & POSITION]** Half width of frame
    walkSpeedTextBox.Position = walkSpeedTextBoxPosition -- Adjusted Position - next to keybinds textbox
    walkSpeedTextBox.AnchorPoint = Vector2.new(0, 0)
    walkSpeedTextBox.Font = buttonFont
    walkSpeedTextBox.TextSize = buttonTextSize - 2
    walkSpeedTextBox.PlaceholderText = "Speed Value"
    walkSpeedTextBox.ClearTextOnFocus = false
    walkSpeedTextBox.BackgroundColor3 = primaryColor
    walkSpeedTextBox.BackgroundTransparency = 0.5
    walkSpeedTextBox.TextColor3 = textColor
    walkSpeedTextBox.BorderSizePixel = 0
    walkSpeedTextBox.Name = "WalkSpeedTextBox"
    walkSpeedTextBox.ClipsDescendants = true
    walkSpeedTextBox.Text = "50" -- Default Speed Value

    local uicorner_walkSpeedTextBox = Instance.new("UICorner")
    uicorner_walkSpeedTextBox.Parent = walkSpeedTextBox
    uicorner_walkSpeedTextBox.CornerRadius = cornerRadius

    -- **Server Invis Button Properties** **[NEW Admin Button]**
    serverInvisButton.Parent = adminFrame -- Parented to Admin Frame!
    serverInvisButton.Size = buttonSize
    serverInvisButton.Position = serverInvisButtonPosition -- Position within admin frame
    serverInvisButton.Font = buttonFont
    serverInvisButton.Text = "Server Invis: Off" -- **[NEW TEXT]**
    serverInvisButton.BackgroundColor3 = adminColor -- **[NEW ADMIN COLOR]**
    serverInvisButton.BackgroundTransparency = 0.5
    serverInvisButton.BorderSizePixel = 0
    serverInvisButton.Name = "ServerInvisButton"
    serverInvisButton.AutoButtonColor = false
    serverInvisButton.ClipsDescendants = true
    serverInvisButton.TextSize = buttonTextSize
    serverInvisButton.TextColor3 = textColor

    uicorner_serverInvis.Parent = serverInvisButton
    uicorner_serverInvis.CornerRadius = cornerRadius


    -- **Summon UI Button Properties**
    summonUIButton.Parent = screenGui
    summonUIButton.Size = summonUIButtonSize
    summonUIButton.Position = UDim2.new(0.5, 0, 0.90, 0) -- Move Summon button lower and closer to center **[ADJUSTED POSITION]**
    summonUIButton.AnchorPoint = Vector2.new(0.5, 0.5)
    summonUIButton.Font = buttonFont
    summonUIButton.Text = "Reload UI" -- Shortened Text
    summonUIButton.BackgroundColor3 = Color3.fromRGB(80, 120, 80)
    summonUIButton.BackgroundTransparency = 0.5
    summonUIButton.BorderSizePixel = 0
    summonUIButton.Name = "SummonUIButton"
    summonUIButton.AutoButtonColor = false
    summonUIButton.ClipsDescendants = true
    summonUIButton.Visible = false
    summonUIButton.TextSize = buttonTextSize

    uicorner_summonUI.Parent = summonUIButton
    uicorner_summonUI.CornerRadius = cornerRadius


    -- **"How does it work?" Button Properties**
    howDoesItWorkLabel.Parent = screenGui
    howDoesItWorkLabel.Size =  UDim2.new(0, 30, 0, 30) -- Slightly larger
    howDoesItWorkLabel.Position = UDim2.new(1, buttonsFramePosition.X.Offset + framePaddingX - 5, 0, buttonsFramePosition.Y.Offset + framePaddingY - 5) -- Top Left of frame
    howDoesItWorkLabel.AnchorPoint = Vector2.new(1,0) -- Anchor to top right
    howDoesItWorkLabel.Font = buttonFont
    howDoesItWorkLabel.Text = "?"
    howDoesItWorkLabel.BackgroundColor3 = highlightColor -- Use highlight color
    howDoesItWorkLabel.BackgroundTransparency = 0.5
    howDoesItWorkLabel.BorderSizePixel = 0
    howDoesItWorkLabel.Name = "HowDoesItWorkButton"
    howDoesItWorkLabel.AutoButtonColor = false
    howDoesItWorkLabel.ClipsDescendants = true
    howDoesItWorkLabel.TextSize = buttonTextSize
    howDoesItWorkLabel.TextColor3 = textColor

    uicorner_howDoesItWork.Parent = howDoesItWorkLabel
    uicorner_howDoesItWork.CornerRadius = UDim.new(0.5, 0) -- More rounded


    -- **"More will come" Label Properties**
    moreWillComeLabel.Parent = screenGui
    moreWillComeLabel.Size = moreWillComeLabelSize
    moreWillComeLabel.Position = UDim2.new(0.5, 0, 1, -moreWillComeLabelYOffset) -- Position closer to bottom
    moreWillComeLabel.AnchorPoint = Vector2.new(0.5, 1)
    moreWillComeLabel.BackgroundColor3 = secondaryColor -- Use secondary color
    moreWillComeLabel.BackgroundTransparency = 0.7 -- Match frame transparency
    moreWillComeLabel.BorderSizePixel = 0
    moreWillComeLabel.Font = buttonFont
    moreWillComeLabel.TextSize = 16
    moreWillComeLabel.TextColor3 = textColor
    moreWillComeLabel.Text = "More features coming soon..." -- Updated text
    moreWillComeLabel.TextXAlignment = "Center"
    moreWillComeLabel.TextYAlignment = "Center"
    moreWillComeLabel.Name = "MoreWillComeLabel"
    local uicorner_moreWillCome = Instance.new("UICorner")
    uicorner_moreWillCome.Parent = moreWillComeLabel
    uicorner_moreWillCome.CornerRadius = cornerRadius


    -- **Tooltip Label properties**
    tooltipLabel_invis.Parent = screenGui
    tooltipLabel_invis.BackgroundTransparency = 1
    tooltipLabel_invis.TextColor3 = textColor
    tooltipLabel_invis.TextStrokeColor3 = Color3.Black
    tooltipLabel_invis.TextStrokeTransparency = 0.5
    tooltipLabel_invis.Font = buttonFont
    tooltipLabel_invis.TextSize = tooltipTextSize
    tooltipLabel_invis.Position = UDim2.new(1, buttonsFramePosition.X.Offset + invisButton.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + invisButton.Position.Y.Offset + buttonSize.Y.Offset + 5) -- Position below first button row
    tooltipLabel_invis.Size = UDim2.new(0, 200, 0, 40) -- Slightly wider tooltips
    tooltipLabel_invis.Visible = false
    tooltipLabel_invis.TextXAlignment = "Center"
    tooltipLabel_invis.TextYAlignment = "Top" -- Align text to top for better readability
    tooltipLabel_invis.Text = "Toggles Invisibility\n(Current Method: Seat, Keybind: Z)"
    tooltipLabel_invis.Name = "InvisTooltip"

    tooltipLabel_unload.Parent = screenGui
    tooltipLabel_unload.BackgroundTransparency = 1
    tooltipLabel_unload.TextColor3 = textColor
    tooltipLabel_unload.TextStrokeColor3 = Color3.Black
    tooltipLabel_unload.TextStrokeTransparency = 0.5
    tooltipLabel_unload.Font = buttonFont
    tooltipLabel_unload.TextSize = tooltipTextSize
    tooltipLabel_unload.Position = UDim2.new(1, buttonsFramePosition.X.Offset + unloadButtonPosition.X.Offset, 0, buttonsFramePosition.Y.Offset + unloadButtonPosition.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_unload.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_unload.Visible = false
    tooltipLabel_unload.TextXAlignment = "Center"
    tooltipLabel_unload.TextYAlignment = "Top"
    tooltipLabel_unload.Text = "Unload UI & Reset Script"
    tooltipLabel_unload.Name = "UnloadTooltip"

    tooltipLabel_debug.Parent = screenGui
    tooltipLabel_debug.BackgroundTransparency = 1
    tooltipLabel_debug.TextColor3 = textColor
    tooltipLabel_debug.TextStrokeColor3 = Color3.Black
    tooltipLabel_debug.TextStrokeTransparency = 0.5
    tooltipLabel_debug.Font = buttonFont
    tooltipLabel_debug.TextSize = tooltipTextSize
    tooltipLabel_debug.Position = UDim2.new(1, buttonsFramePosition.X.Offset + debugButtonPosition.X.Offset, 0, buttonsFramePosition.Y.Offset + debugButtonPosition.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_debug.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_debug.Visible = false
    tooltipLabel_debug.TextXAlignment = "Center"
    tooltipLabel_debug.TextYAlignment = "Top"
    tooltipLabel_debug.Text = "Toggle Debug Mode\n(Prints to Output)"
    tooltipLabel_debug.Name = "DebugTooltip"

    tooltipLabel_hideUI.Parent = screenGui
    tooltipLabel_hideUI.BackgroundTransparency = 1
    tooltipLabel_hideUI.TextColor3 = textColor
    tooltipLabel_hideUI.TextStrokeColor3 = Color3.Black
    tooltipLabel_hideUI.TextStrokeTransparency = 0.5
    tooltipLabel_hideUI.Font = buttonFont
    tooltipLabel_hideUI.TextSize = tooltipTextSize
    tooltipLabel_hideUI.Position = UDim2.new(1, buttonsFramePosition.X.Offset + hideUIButtonPosition.X.Offset, 0, buttonsFramePosition.Y.Offset + hideUIButtonPosition.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_hideUI.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_hideUI.Visible = false
    tooltipLabel_hideUI.TextXAlignment = "Center"
    tooltipLabel_hideUI.TextYAlignment = "Top"
    tooltipLabel_hideUI.Text = "Hide/Show UI\n(Keybind: K)"
    tooltipLabel_hideUI.Name = "HideUITooltip"

    tooltipLabel_method1.Parent = screenGui
    tooltipLabel_method1.BackgroundTransparency = 1
    tooltipLabel_method1.TextColor3 = textColor
    tooltipLabel_method1.TextStrokeColor3 = Color3.Black
    tooltipLabel_method1.TextStrokeTransparency = 0.5
    tooltipLabel_method1.Font = buttonFont
    tooltipLabel_method1.TextSize = tooltipTextSize
    tooltipLabel_method1.Position = UDim2.new(1, buttonsFramePosition.X.Offset + methodButton1.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + methodButton1.Position.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_method1.Size = UDim2.new(0, 220, 0, 40) -- **[ADJUSTED WIDTH]**
    tooltipLabel_method1.Visible = false
    tooltipLabel_method1.TextXAlignment = "Center"
    tooltipLabel_method1.TextYAlignment = "Top"
    tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Keybind: M to switch)" -- **[UPDATED TEXT]**
    tooltipLabel_method1.Name = "Method1Tooltip"

    tooltipLabel_method2.Parent = screenGui -- **[NEW] Method 2 Tooltip**
    tooltipLabel_method2.BackgroundTransparency = 1
    tooltipLabel_method2.TextColor3 = textColor
    tooltipLabel_method2.TextStrokeColor3 = Color3.Black
    tooltipLabel_method2.TextStrokeTransparency = 0.5
    tooltipLabel_method2.Font = buttonFont
    tooltipLabel_method2.TextSize = tooltipTextSize
    tooltipLabel_method2.Position = UDim2.new(1, buttonsFramePosition.X.Offset + methodButton2.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + methodButton2.Position.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_method2.Size = UDim2.new(0, 220, 0, 40) -- **[ADJUSTED WIDTH]**
    tooltipLabel_method2.Visible = false
    tooltipLabel_method2.TextXAlignment = "Center"
    tooltipLabel_method2.TextYAlignment = "Top"
    tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Keybind: M to switch)" -- **[NEW TEXT]**
    tooltipLabel_method2.Name = "Method2Tooltip"


    tooltipLabel_fakeCharacter.Parent = screenGui
    tooltipLabel_fakeCharacter.BackgroundTransparency = 1
    tooltipLabel_fakeCharacter.TextColor3 = textColor
    tooltipLabel_fakeCharacter.TextStrokeColor3 = Color3.Black
    tooltipLabel_fakeCharacter.TextStrokeTransparency = 0.5
    tooltipLabel_fakeCharacter.Font = buttonFont
    tooltipLabel_fakeCharacter.TextSize = tooltipTextSize
    tooltipLabel_fakeCharacter.Position = UDim2.new(1, buttonsFramePosition.X.Offset + fakeCharacterButton.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + fakeCharacterButton.Position.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_fakeCharacter.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_fakeCharacter.Visible = false
    tooltipLabel_fakeCharacter.TextXAlignment = "Center"
    tooltipLabel_fakeCharacter.TextYAlignment = "Top"
    tooltipLabel_fakeCharacter.Text = "Toggle Fake Character\n(Keybind: N)"
    tooltipLabel_fakeCharacter.Name = "FakeCharacterTooltip"


    tooltipLabel_keybindToggle.Parent = screenGui
    tooltipLabel_keybindToggle.BackgroundTransparency = 1
    tooltipLabel_keybindToggle.TextColor3 = textColor
    tooltipLabel_keybindToggle.TextStrokeColor3 = Color3.Black
    tooltipLabel_keybindToggle.TextStrokeTransparency = 0.5
    tooltipLabel_keybindToggle.Font = buttonFont
    tooltipLabel_keybindToggle.TextSize = tooltipTextSize
    tooltipLabel_keybindToggle.Position = UDim2.new(1, buttonsFramePosition.X.Offset + keybindToggleButton.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + keybindToggleButton.Position.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_keybindToggle.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_keybindToggle.Visible = false
    tooltipLabel_keybindToggle.TextXAlignment = "Center"
    tooltipLabel_keybindToggle.TextYAlignment = "Top"
    tooltipLabel_keybindToggle.Text = "Enable/Disable Keybinds\n(Currently Enabled)" -- Adjust based on initial state
    tooltipLabel_keybindToggle.Name = "KeybindTooltip"

    tooltipLabel_walkSpeedBoost.Parent = screenGui
    tooltipLabel_walkSpeedBoost.BackgroundTransparency = 1
    tooltipLabel_walkSpeedBoost.TextColor3 = textColor
    tooltipLabel_walkSpeedBoost.TextStrokeColor3 = Color3.Black
    tooltipLabel_walkSpeedBoost.TextStrokeTransparency = 0.5
    tooltipLabel_walkSpeedBoost.Font = buttonFont
    tooltipLabel_walkSpeedBoost.TextSize = tooltipTextSize
    tooltipLabel_walkSpeedBoost.Position = UDim2.new(1, buttonsFramePosition.X.Offset + walkSpeedBoostButton.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + walkSpeedBoostButton.Position.Y.Offset + buttonSize.Y.Offset + 5)
    tooltipLabel_walkSpeedBoost.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_walkSpeedBoost.Visible = false
    tooltipLabel_walkSpeedBoost.TextXAlignment = "Center"
    tooltipLabel_walkSpeedBoost.TextYAlignment = "Top"
    tooltipLabel_walkSpeedBoost.Text = "Toggle Walk Speed Boost\n(Keybind: B)"
    tooltipLabel_walkSpeedBoost.Name = "WalkSpeedBoostTooltip"

    tooltipLabel_keybindsTextBox.Parent = screenGui -- **[NEW] Keybinds Textbox Tooltip**
    tooltipLabel_keybindsTextBox.BackgroundTransparency = 1
    tooltipLabel_keybindsTextBox.TextColor3 = textColor
    tooltipLabel_keybindsTextBox.TextStrokeColor3 = Color3.Black
    tooltipLabel_keybindsTextBox.TextStrokeTransparency = 0.5
    tooltipLabel_keybindsTextBox.Font = buttonFont
    tooltipLabel_keybindsTextBox.TextSize = tooltipTextSize
    tooltipLabel_keybindsTextBox.Position = UDim2.new(0.5, 0, 1, keybindsTextBox.Position.Y.Offset + keybindsTextBox.Size.Y.Offset + 10) -- Below textbox
    tooltipLabel_keybindsTextBox.Size = UDim2.new(0, 220, 0, 40)
    tooltipLabel_keybindsTextBox.Visible = false
    tooltipLabel_keybindsTextBox.TextXAlignment = "Center"
    tooltipLabel_keybindsTextBox.TextYAlignment = "Top"
    tooltipLabel_keybindsTextBox.Text = "Edit Keybinds (Comma Separated)\nExample: Z,N,K,B,X,M,L" -- **[UPDATED EXAMPLE]**
    tooltipLabel_keybindsTextBox.Name = "KeybindsTextBoxTooltip"

    tooltipLabel_walkSpeedTextBox.Parent = screenGui -- **[NEW] Walk Speed Textbox Tooltip**
    tooltipLabel_walkSpeedTextBox.BackgroundTransparency = 1
    tooltipLabel_walkSpeedTextBox.TextColor3 = textColor
    tooltipLabel_walkSpeedTextBox.TextStrokeColor3 = Color3.Black
    tooltipLabel_walkSpeedTextBox.TextStrokeTransparency = 0.5
    tooltipLabel_walkSpeedTextBox.Font = buttonFont
    tooltipLabel_walkSpeedTextBox.TextSize = tooltipTextSize
    tooltipLabel_walkSpeedTextBox.Position = UDim2.new(1, buttonsFramePosition.X.Offset + walkSpeedTextBox.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + walkSpeedTextBox.Position.Y.Offset + walkSpeedTextBox.Size.Y.Offset + 5)
    tooltipLabel_walkSpeedTextBox.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_walkSpeedTextBox.Visible = false
    tooltipLabel_walkSpeedTextBox.TextXAlignment = "Center"
    tooltipLabel_walkSpeedTextBox.TextYAlignment = "Top"
    tooltipLabel_walkSpeedTextBox.Text = "Enter desired walk speed\n(Numbers only)"
    tooltipLabel_walkSpeedTextBox.Name = "WalkSpeedTextBoxTooltip"

    tooltipLabel_noclip.Parent = screenGui -- **[NEW] NoClip Button Tooltip**
    tooltipLabel_noclip.BackgroundTransparency = 1
    tooltipLabel_noclip.TextColor3 = textColor
    tooltipLabel_noclip.TextStrokeColor3 = Color3.Black
    tooltipLabel_noclip.TextStrokeTransparency = 0.5
    tooltipLabel_noclip.Font = buttonFont
    tooltipLabel_noclip.TextSize = tooltipTextSize
    tooltipLabel_noclip.Position = UDim2.new(1, buttonsFramePosition.X.Offset + noclipButton.Position.X.Offset, 0, buttonsFramePosition.Y.Offset + noclipButton.Position.Y.Offset + noclipButton.Size.Y.Offset + 5)
    tooltipLabel_noclip.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_noclip.Visible = false
    tooltipLabel_noclip.TextXAlignment = "Center"
    tooltipLabel_noclip.TextYAlignment = "Top"
    tooltipLabel_noclip.Text = "Toggle NoClip Mode\n(Keybind: X)"
    tooltipLabel_noclip.Name = "NoClipTooltip"

    tooltipLabel_serverInvis.Parent = screenGui -- **[NEW] Server Invis Button Tooltip**
    tooltipLabel_serverInvis.BackgroundTransparency = 1
    tooltipLabel_serverInvis.TextColor3 = textColor
    tooltipLabel_serverInvis.TextStrokeColor3 = Color3.Black
    tooltipLabel_serverInvis.TextStrokeTransparency = 0.5
    tooltipLabel_serverInvis.Font = buttonFont
    tooltipLabel_serverInvis.TextSize = tooltipTextSize
    tooltipLabel_serverInvis.Position = UDim2.new(0, adminFramePosition.X.Offset + serverInvisButton.Position.X.Offset, 0, adminFramePosition.Position.Y.Offset + serverInvisButton.Position.Y.Offset + buttonSize.Y.Offset + 5) -- Position below Server Invis button
    tooltipLabel_serverInvis.Size = UDim2.new(0, 200, 0, 40)
    tooltipLabel_serverInvis.Visible = false
    tooltipLabel_serverInvis.TextXAlignment = "Center"
    tooltipLabel_serverInvis.TextYAlignment = "Top"
    tooltipLabel_serverInvis.Text = "Toggle Server-Wide Invisibility\n(Admin Feature - No Functionality Yet)" -- **[NEW TEXT]**
    tooltipLabel_serverInvis.Name = "ServerInvisTooltip"


    -- **Function to set character transparency**
    local function setCharacterTransparency(transparency)
        local character = player.Character
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
                    part.Transparency = transparency
                end
            end
        end
    end


    -- **Function to toggle invisibility**
    local function toggleInvisibility()
        buttonClickSound:Play()
        invis_on = not invis_on
        if DEBUG_MODE then
            print("Toggling Invisibility - invis_on is now: " .. tostring(invis_on) .. ", Method: " .. current_method)
        end

        if invis_on then
            if current_method == 1 then -- Method 1: Seat
                setCharacterTransparency(0.5)
                invisButton.Text = "Invis: On" -- Text Update!
                tooltipLabel_invis.Text = "Invisibility Enabled\n(Method 1: Seat, Keybind: Z)" -- Tooltip Update!
                tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Active Method, Keybind: M to switch)" -- **[UPDATED TOOLTIP]**
                tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Keybind: M to switch)" -- **[UPDATED TOOLTIP]**

                local character = player.Character
                if character then
                    if DEBUG_MODE then print("toggleInvisibility: Character found: ", character.Name) end
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        if DEBUG_MODE then print("toggleInvisibility: HumanoidRootPart found: ", humanoidRootPart.Name) end
                        local savedpos = humanoidRootPart.CFrame
                        wait()
                        character:MoveTo(seatTeleportPosition)
                        wait(0.05)
                        local Seat = Instance.new('Seat', game.Workspace)
                        Seat.Anchored = false
                        Seat.CanCollide = false
                        Seat.Name = 'invischair'
                        Seat.Transparency = 1
                        Seat.Position = seatTeleportPosition
                        local Weld = Instance.new("Weld", Seat)
                        Weld.Part0 = Seat
                        local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
                        if torso then
                            if DEBUG_MODE then print("toggleInvisibility: Torso found: ", torso.Name) end
                            Weld.Part1 = torso
                            wait()
                            Seat.CFrame = savedpos
                            currentSeatPosition = Seat.Position
                            startSeatReturnHeartbeat()
                            game.StarterGui:SetCore("SendNotification", {
                                Title = "Invis Enabled (Seat)";
                                Duration = 1;
                                Text = "Method 1: Seat - Character semi-transparent & teleported to seat";
                            })
                        else
                            warn("Torso or UpperTorso not found for welding Seat!")
                            Seat:Destroy()
                            currentSeatPosition = nil
                            stopSeatReturnHeartbeat()
                            game.StarterGui:SetCore("SendNotification", {
                                Title = "Invis Enabled (Seat - No Torso)";
                                Duration = 1;
                                Text = "Method 1: Seat - Character semi-transparent, but Torso missing for seat.";
                            })
                            warn("HumanoidRootPart not found for LocalPlayer's Character!")
                            currentSeatPosition = nil
                            stopSeatReturnHeartbeat()
                            game.StarterGui:SetCore("SendNotification", {
                                Title = "Invis Enabled (Seat - No RootPart)";
                                Duration = 1;
                                Text = "Method 1: Seat - Character semi-transparent, but teleport failed (no RootPart).";
                            })
                        end
                    else
                        warn("Character not found for LocalPlayer during Invis On!")
                        currentSeatPosition = nil
                        stopSeatReturnHeartbeat()
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Invis Enabled (Seat - Failed)";
                            Duration = 1;
                            Text = "Method 1: Seat - Invisibility ON failed. Character not found.";
                        })
                    end
                end
            elseif current_method == 2 then -- Method 2: Box **[NEW Method 2 Logic]**
                setCharacterTransparency(0.3) -- Slightly more transparent for box method
                invisButton.Text = "Invis: On"
                tooltipLabel_invis.Text = "Invisibility Enabled\n(Method 2: Box, Keybind: Z)" -- Tooltip Update!
                tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Keybind: M to switch)" -- **[UPDATED TOOLTIP]**
                tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Active Method, Keybind: M to switch)" -- **[UPDATED TOOLTIP]**


                local character = player.Character
                if character then
                    if DEBUG_MODE then print("toggleInvisibility: Character found: ", character.Name) end
                    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                    if humanoidRootPart then
                        if DEBUG_MODE then print("toggleInvisibility: HumanoidRootPart found: ", humanoidRootPart.Name) end
                        local savedpos = humanoidRootPart.CFrame
                        wait()
                        character:MoveTo(seatTeleportPositionMethod2) -- **[NEW Method 2 Teleport]**
                        wait(0.05)
                        local InvisBoxMethod2 = Instance.new('Part', game.Workspace) -- **[NEW Box Part]**
                        InvisBoxMethod2.Anchored = true
                        InvisBoxMethod2.CanCollide = false
                        InvisBoxMethod2.Name = 'InvisBoxMethod2'
                        InvisBoxMethod2.Transparency = 0.8 -- Box more transparent
                        InvisBoxMethod2.BrickColor = BrickColor.Blue() -- Different Color Box
                        InvisBoxMethod2.Size = Vector3.new(3,4,3) -- Slightly bigger box
                        InvisBoxMethod2.CFrame = CFrame.new(seatTeleportPositionMethod2) -- **[NEW Method 2 Teleport]**

                        wait()
                        InvisBoxMethod2.CFrame = savedpos * CFrame.new(0, -2, 0) -- Position box at player's feet


                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Invis Enabled (Box)";
                            Duration = 1;
                            Text = "Method 2: Box - Character transparent & inside a box.";
                        })
                    else
                        warn("HumanoidRootPart not found for LocalPlayer's Character! (Box Method)")
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Invis Enabled (Box - No RootPart)";
                            Duration = 1;
                            Text = "Method 2: Box - Character semi-transparent, but box failed (no RootPart).";
                        })
                    end
                end


            end


        else -- Invis Off (Cleanup)
            setCharacterTransparency(0)
            invisButton.Text = "Invis: Off" -- Text Update!
            tooltipLabel_invis.Text = "Toggle Invisibility\n(Current Method: " .. (current_method == 1 and "Seat" or "Box") .. ", Keybind: Z)" -- Tooltip Update! **[DYNAMIC TOOLTIP]**
            tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Keybind: M to switch)" -- **[RESET TOOLTIP]**
            tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Keybind: M to switch)" -- **[RESET TOOLTIP]**


            if workspace:FindFirstChild('invischair') then
                workspace:FindFirstChild('invischair'):Destroy()
                if DEBUG_MODE then print("toggleInvisibility: invischair destroyed") end
            end
            if workspace:FindFirstChild('InvisBoxMethod2') then
                workspace:FindFirstChild('InvisBoxMethod2'):Destroy()
                if DEBUG_MODE then print("toggleInvisibility: InvisBoxMethod2 destroyed") end
            end
            stopSeatReturnHeartbeat()
            currentSeatPosition = nil


            game.StarterGui:SetCore("SendNotification", {
                Title = "Invis Disabled";
                Duration = 1;
                Text = "Character is now fully visible";
            })
        end
    end


    -- **Function to toggle Fake Character**
    local function toggleFakeCharacter()
        buttonClickSound:Play()
        fake_character_enabled = not fake_character_enabled
        if DEBUG_MODE then
            print("Toggling Fake Character - fake_character_enabled is now: " .. tostring(fake_character_enabled))
        end

        if fake_character_enabled then
            fakeCharacterButton.Text = "Fake Char: On" -- Text Update!
            tooltipLabel_fakeCharacter.Text = "Toggle Fake Character\nFake Character is Enabled\n(Keybind: N)" -- Tooltip Update!
            game.StarterGui:SetCore("SendNotification", {
                Title = "Fake Character Enabled";
                Duration = 1;
                Text = "Fake Character Enabled - A fake character is spawned!";
            })

            -- **Create Basic Fake Character Logic** (Simplified - No "stronger" character)
            fakeCharacterModel = Instance.new("Model")
            fakeCharacterModel.Name = "FakeCharacterModel"
            fakeCharacterModel.Parent = workspace

            local humanoid = Instance.new("Humanoid")
            humanoid.Name = "Humanoid"
            humanoid.Parent = fakeCharacterModel

            local humanoidRootPart = Instance.new("Part")
            humanoidRootPart.Name = "HumanoidRootPart"
            humanoidRootPart.Size = Vector3.new(2, 2, 1)
            humanoidRootPart.Anchored = true
            humanoidRootPart.CanCollide = false
            humanoidRootPart.Transparency = 0.5
            humanoidRootPart.BrickColor = BrickColor.Green()
            humanoidRootPart.Parent = fakeCharacterModel
        else
            fakeCharacterButton.Text = "Fake Char: Off" -- Text Update!
            tooltipLabel_fakeCharacter.Text = "Toggle Fake Character\nFake Character is Disabled\n(Keybind: N)" -- Tooltip Update!
            game.StarterGui:SetCore("SendNotification", {
                Title = "Fake Character Disabled";
                Duration = 1;
                Text = "Fake Character Disabled - Fake character removed.";
            })
            if fakeCharacterModel then
                fakeCharacterModel:Destroy()
                fakeCharacterModel = nil
            end
        end
    end


    -- **Function to toggle Keybinds**
    local function toggleKeybinds()
        buttonClickSound:Play()
        keybind_enabled = not keybind_enabled
        if DEBUG_MODE then
            print("Toggling Keybinds - keybind_enabled is now: " .. tostring(keybind_enabled))
        end

        if keybind_enabled then
            keybindToggleButton.Text = "Keybinds: On" -- Text Update!
            tooltipLabel_keybindToggle.Text = "Enable/Disable Keybinds\nKeybinds are Enabled\n(Press K to Hide UI)" -- Tooltip Update!
            game.StarterGui:SetCore("SendNotification", {
                Title = "Keybinds Enabled";
                Duration = 1;
                Text = "Keybinds Enabled - Keybinds are now active!";
            })
        else
            keybindToggleButton.Text = "Keybinds: Off" -- Text Update!
            tooltipLabel_keybindToggle.Text = "Toggle Keybinds\nKeybinds are Disabled" -- Tooltip Update!
            game.StarterGui:SetCore("SendNotification", {
                Title = "Keybinds Disabled";
                Duration = 1;
                Text = "Keybinds Disabled - Keybinds are now inactive.";
            })
        end
    end

    -- **Function to toggle Walk Speed Boost**
    local function toggleWalkSpeedBoost()
        buttonClickSound:Play()
        walkspeed_boost_enabled = not walkspeed_boost_enabled

        local speedValue = tonumber(walkSpeedTextBox.Text) -- Get value from textbox, convert to number
        if not speedValue then
            speedValue = 50 -- Default speed if textbox is invalid
            walkSpeedTextBox.Text = "50" -- Reset textbox to default
            game.StarterGui:SetCore("SendNotification", {
                Title = "Invalid Speed Value";
                Duration = 2;
                Text = "Using default speed (50). Please enter numbers only in Speed Textbox.";
            })
        end


        if DEBUG_MODE then
            print("Toggling Walk Speed Boost - walkspeed_boost_enabled is now: " .. tostring(walkspeed_boost_enabled) .. ", Speed Value: " .. speedValue)
        end

        if walkspeed_boost_enabled then
            walkSpeedBoostButton.Text = "Speed Boost: On"
            tooltipLabel_walkSpeedBoost.Text = "Toggle Walk Speed Boost\nSpeed Boost is Enabled\n(Keybind: B)"
            player.Character.Humanoid.WalkSpeed = speedValue -- Set walk speed from textbox
            game.StarterGui:SetCore("SendNotification", {
                Title = "Speed Boost Enabled";
                Duration = 1;
                Text = "Walk speed increased to " .. speedValue;
            })
        else
            walkSpeedBoostButton.Text = "Speed Boost: Off"
            tooltipLabel_walkSpeedBoost.Text = "Toggle Walk Speed Boost\nSpeed Boost is Disabled\n(Keybind: B)"
            player.Character.Humanoid.WalkSpeed = 16 -- Reset to default walk speed
            game.StarterGui:SetCore("SendNotification", {
                Title = "Speed Boost Disabled";
                Duration = 1;
                Text = "Walk speed reset to default.";
            })
        end
    end

    -- **Function to toggle NoClip**
    local function toggleNoClip()
        buttonClickSound:Play()
        noclip_enabled = not noclip_enabled

        if DEBUG_MODE then
            print("Toggling NoClip - noclip_enabled is now: " .. tostring(noclip_enabled))
        end

        local character = player.Character
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    if noclip_enabled then
                        part.CanCollide = false
                    else
                        part.CanCollide = true
                    end
                end
            end

            if noclip_enabled then
                noclipButton.Text = "NoClip: On"
                tooltipLabel_noclip.Text = "Toggle NoClip Mode\nNoClip is Enabled\n(Keybind: X)"
                player.Character.Humanoid.JumpPower = 0 -- Disable jump in noclip
                player.Character.Humanoid.WalkSpeed = tonumber(walkSpeedTextBox.Text) * 1.5 -- Increase speed slightly in noclip for noclip
                game.StarterGui:SetCore("SendNotification", {
                    Title = "NoClip Enabled";
                    Duration = 1;
                    Text = "NoClip mode ON. Use X to toggle off.";
                })
            else
                noclipButton.Text = "NoClip: Off"
                tooltipLabel_noclip.Text = "Toggle NoClip Mode\nNoClip is Disabled\n(Keybind: X)"
                player.Character.Humanoid.JumpPower = 50 -- Restore default jump
                player.Character.Humanoid.WalkSpeed = tonumber(walkSpeedTextBox.Text) -- Restore walk speed to speed textbox value
                game.StarterGui:SetCore("SendNotification", {
                    Title = "NoClip Disabled";
                    Duration = 1;
                    Text = "NoClip mode OFF.";
                })
            end
        else
            warn("Character not found for NoClip!")
            game.StarterGui:SetCore("SendNotification", {
                Title = "NoClip Failed";
                Duration = 2;
                Text = "Character not found. NoClip could not be toggled.";
            })
        end
    end

    -- **Function to toggle Server Invisibility** **[NEW Admin Feature]**
    local function toggleServerInvisibility()
        buttonClickSound:Play()
        server_invis_enabled = not server_invis_enabled

        if DEBUG_MODE then
            print("Toggling Server Invisibility - server_invis_enabled is now: " .. tostring(server_invis_enabled))
        end

        if server_invis_enabled then
            serverInvisButton.Text = "Server Invis: On" -- **[UPDATED TEXT]**
            serverInvisButton.BackgroundColor3 = highlightColor -- **[HIGHLIGHT ADMIN BUTTON]**
            tooltipLabel_serverInvis.Text = "Toggle Server-Wide Invisibility\nServer Invisibility is Enabled\n(Admin Feature - No Functionality Yet)" -- **[UPDATED TOOLTIP]**
            game.StarterGui:SetCore("SendNotification", {
                Title = "Server Invis Enabled";
                Duration = 1;
                Text = "**ADMIN FEATURE** - Server-wide invisibility enabled (no function yet)."; -- **[ADMIN NOTIFICATION]**
            })
            -- **[SERVER-SIDE INVISIBILITY LOGIC WOULD GO HERE - NOT IMPLEMENTED IN THIS CLIENT-SIDE SCRIPT]**

        else
            serverInvisButton.Text = "Server Invis: Off" -- **[UPDATED TEXT]**
            serverInvisButton.BackgroundColor3 = adminColor -- **[RESET ADMIN BUTTON COLOR]**
            tooltipLabel_serverInvis.Text = "Toggle Server-Wide Invisibility\nServer Invisibility is Disabled\n(Admin Feature - No Functionality Yet)" -- **[UPDATED TOOLTIP]**
            game.StarterGui:SetCore("SendNotification", {
                Title = "Server Invis Disabled";
                Duration = 1;
                Text = "**ADMIN FEATURE** - Server-wide invisibility disabled (no function yet)."; -- **[ADMIN NOTIFICATION]**
            })
            -- **[SERVER-SIDE INVISIBILITY LOGIC WOULD GO HERE - NOT IMPLEMENTED IN THIS CLIENT-SIDE SCRIPT]**
        end
    end


    -- **Function to Hide/Show UI**
    local function toggleUIHide()
        buttonClickSound:Play()
        ui_hidden = not ui_hidden
        if DEBUG_MODE then
            print("Toggling UI visibility - ui_hidden is now: " .. tostring(ui_hidden))
        end

        if ui_hidden then
            buttonsFrame.Visible = false
            summonUIButton.Visible = true
            hideUIButton.Text = "👁️"
            tooltipLabel_hideUI.Text = "Show UI\nUI is now Hidden\nPress K to Show"
            game.StarterGui:SetCore("SendNotification", {
                Title = "UI Hidden";
                Duration = 1;
                Text = "UI Hidden - Use keybind (K) or 'Reload UI' to show.";
            })
        else
            buttonsFrame.Visible = true
            summonUIButton.Visible = false
            hideUIButton.Text = "Hide UI" -- Text update!
            tooltipLabel_hideUI.Text = "Hide UI\nUI is now Enabled\nPress K to hide" -- Tooltip update!
            game.StarterGui:SetCore("SendNotification", {
                Title = "UI Shown";
                Duration = 1;
                Text = "UI Shown - UI is now visible.";
            })
        end
    end

    -- **Function to Unload UI and Reset Script**
    local function unloadUI()
        buttonClickSound:Play()
        if screenGui then
            screenGui:Destroy()
            screenGui = nil
            ui_hidden = false
            invis_on = false
            fake_character_enabled = false
            keybind_enabled = true -- Reset keybind state to default ON
            walkspeed_boost_enabled = false -- Reset speed boost to default OFF
            noclip_enabled = false -- Reset noclip to default OFF
            server_invis_enabled = false -- **[NEW] Reset server invis state**


            -- Reset Button Texts and Tooltips to defaults
            invisButton.Text = "Invis: Off"
            tooltipLabel_invis.Text = "Toggle Invisibility\n(Current Method: " .. (current_method == 1 and "Seat" or "Box") .. ", Keybind: Z)"
            methodButton1.Text = "Method 1: Seat" -- **[RESET METHOD BUTTON TEXT]**
            methodButton2.Text = "Method 2: Box" -- **[RESET METHOD BUTTON TEXT]**
            tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Keybind: M to switch)" -- **[RESET METHOD TOOLTIP]**
            tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Keybind: M to switch)" -- **[RESET METHOD TOOLTIP]**
            fakeCharacterButton.Text = "Fake Char: Off"
            tooltipLabel_fakeCharacter.Text = "Toggle Fake Character\n(Keybind: N)"
            keybindToggleButton.Text = "Keybinds: On"
            tooltipLabel_keybindToggle.Text = "Enable/Disable Keybinds\n(Currently Enabled)"
            walkSpeedBoostButton.Text = "Speed Boost: Off"
            tooltipLabel_walkSpeedBoost.Text = "Toggle Walk Speed Boost\n(Keybind: B)"
            noclipButton.Text = "NoClip: Off"
            tooltipLabel_noclip.Text = "Toggle NoClip Mode\n(Keybind: X)"
            hideUIButton.Text = "Hide UI"
            tooltipLabel_hideUI.Text = "Hide/Show UI\n(Keybind: K)"
            serverInvisButton.Text = "Server Invis: Off" -- **[RESET ADMIN BUTTON TEXT]**
            serverInvisButton.BackgroundColor3 = adminColor -- **[RESET ADMIN BUTTON COLOR]**
            tooltipLabel_serverInvis.Text = "Toggle Server-Wide Invisibility\n(Admin Feature - No Functionality Yet)" -- **[RESET ADMIN TOOLTIP]**


            game.StarterGui:SetCore("SendNotification", {
                Title = "UI Unloaded";
                Duration = 2;
                Text = "UI Unloaded and script states reset.";
            })
            if DEBUG_MODE then print("UnloadUI: UI Destroyed and script reset.") end
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "UI Not Loaded";
                Duration = 2;
                Text = "UI is not currently loaded.";
            })
            if DEBUG_MODE then print("UnloadUI: UI was not loaded.") end
        end
    end


    -- **Function to handle method button clicks**
    local function setMethod(methodNumber)
        buttonClickSound:Play()
        current_method = methodNumber
        if DEBUG_MODE then
            print("Method set to: " .. current_method)
        end

        if methodNumber == 1 then
            methodButton1.Text = "Method 1: Seat" -- **[UPDATED TEXT]**
            methodButton2.Text = "Method 2: Box" -- **[UPDATED TEXT]**
            tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Active Method, Keybind: M to switch)" -- **[UPDATED TOOLTIP]**
            tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Keybind: M to switch)" -- **[UPDATED TOOLTIP]**
            game.StarterGui:SetCore("SendNotification", {
                Title = "Method Changed";
                Duration = 1;
                Text = "Invisibility method set to: Method 1 - Seat Teleport."; -- **[UPDATED NOTIFICATION]**
            })
        elseif methodNumber == 2 then -- **[NEW Method 2 Logic in setMethod]**
            methodButton1.Text = "Method 1: Seat" -- **[UPDATED TEXT]**
            methodButton2.Text = "Method 2: Box" -- **[UPDATED TEXT]**
            tooltipLabel_method1.Text = "Invisibility Method 1:\nSeat Teleport (Keybind: M to switch)" -- **[UPDATED TOOLTIP]**
            tooltipLabel_method2.Text = "Invisibility Method 2:\nBox Method (Active Method, Keybind: M to switch)" -- **[UPDATED TOOLTIP]**
            game.StarterGui:SetCore("SendNotification", {
                Title = "Method Changed";
                Duration = 1;
                Text = "Invisibility method set to: Method 2 - Box Method."; -- **[UPDATED NOTIFICATION]**
            })
        end
    end

    -- **Function to Update Keybinds from TextBox**
    local function updateKeybinds()
        local keybindText = keybindsTextBox.Text
        local keyCodes = string.split(keybindText, ",") -- Split by commas

        local newKeybinds = {}
        local keyNames = {"toggle_invis", "toggle_fake_character", "hide_ui", "toggle_walkspeed_boost", "toggle_noclip", "switch_method", "load_ui"} -- **[UPDATED KEYNAMES]**

        for i, keyCodeString in ipairs(keyCodes) do
            keyCodeString = string.trim(keyCodeString) -- Remove extra spaces
            local keyCodeEnum = Enum.KeyCode:FindByName(keyCodeString:upper()) -- Convert text to Enum.KeyCode

            if keyCodeEnum and keyNames[i] then -- Valid KeyCode and key name exists
                newKeybinds[keyNames[i]] = keyCodeEnum
            else
                game.StarterGui:SetCore("SendNotification", {
                    Title = "Invalid Keybind";
                    Duration = 3;
                    Text = "Invalid key code: '" .. keyCodeString .. "' or too many/few keycodes. Using defaults (Z,N,K,B,X,M,L). Example: Z,N,K,B,X,M,L"; -- **[UPDATED EXAMPLE]**
                })
                -- If error, revert to default keybinds and reset textbox text
                newKeybinds = {
                    toggle_invis = Enum.KeyCode.Z,
                    toggle_fake_character = Enum.KeyCode.N,
                    hide_ui = Enum.KeyCode.K,
                    toggle_walkspeed_boost = Enum.KeyCode.B,
                    toggle_noclip = Enum.KeyCode.X,
                    switch_method = Enum.KeyCode.M,
                    load_ui = Enum.KeyCode.L
                }
                local defaultKeybindText = ""
                for j, name in ipairs(keyNames) do
                    defaultKeybindText = defaultKeybindText .. newKeybinds[name].Name .. (j < #keyNames and "," or "")
                end
                keybindsTextBox.Text = defaultKeybindText
                return -- Exit function after error and reset
            end
        end
        keybinds = newKeybinds -- Update keybinds table if all are valid
        game.StarterGui:SetCore("SendNotification", {
            Title = "Keybinds Updated";
            Duration = 2;
            Text = "Keybinds successfully updated from TextBox.";
        })
        if DEBUG_MODE then print("Keybinds Updated to:", keybinds) end
    end

    -- **Heartbeat function for seat return (if enabled)**
    local function startSeatReturnHeartbeat()
        if seatAreaReturnEnabled and not seatReturnHeartbeat then
            seatReturnHeartbeat = runService.Heartbeat:Connect(function()
                if currentSeatPosition then
                    local distance = (player.Character.HumanoidRootPart.Position - currentSeatPosition).Magnitude
                    if distance > seatAreaDistanceThreshold then
                        if DEBUG_MODE then print("SeatReturnHeartbeat: Player moved too far, returning to seat...") end
                        player.Character:MoveTo(seatTeleportPosition) -- Return to seat area
                    end
                end
            end)
        end
    end

    local function stopSeatReturnHeartbeat()
        if seatReturnHeartbeat then
            seatReturnHeartbeat:Disconnect()
            seatReturnHeartbeat = nil
            if DEBUG_MODE then print("SeatReturnHeartbeat stopped.") end
        end
    end


    -- **Button Click Events**
    invisButton.MouseButton1Click:Connect(toggleInvisibility)
    unloadButton.MouseButton1Click:Connect(unloadUI)
    debugButton.MouseButton1Click:Connect(function() DEBUG_MODE = not DEBUG_MODE; buttonClickSound:Play();  game.StarterGui:SetCore("SendNotification", {Title = "Debug Mode Toggled";Duration = 1; Text = "Debug mode is now " .. (DEBUG_MODE and "ON" or "OFF");}) end)
    hideUIButton.MouseButton1Click:Connect(toggleUIHide)
    methodButton1.MouseButton1Click:Connect(function() setMethod(1) end)
    methodButton2.MouseButton1Click:Connect(function() setMethod(2) end) -- **[NEW Method 2 Button Event]**
    fakeCharacterButton.MouseButton1Click:Connect(toggleFakeCharacter)
    keybindToggleButton.MouseButton1Click:Connect(toggleKeybinds)
    walkSpeedBoostButton.MouseButton1Click:Connect(toggleWalkSpeedBoost)
    noclipButton.MouseButton1Click:Connect(toggleNoClip)
    serverInvisButton.MouseButton1Click:Connect(toggleServerInvisibility) -- **[NEW Admin Button Event]**
    summonUIButton.MouseButton1Click:Connect(loadInvisUI)
    howDoesItWorkLabel.MouseButton1Click:Connect(function() game.StarterGui:SetCore("SendNotification", {Title = "How to Use";Duration = 5; Text = "Toggle features using buttons or keybinds (if enabled). Edit keybinds in textbox below. Method 1 'Seat' teleports you to a location briefly. Method 2 'Box' puts you in a box. 'Fake Char' spawns a dummy. 'Speed Boost' increases walk speed. 'NoClip' allows walking through walls. 'Server Invis' (ADMIN) is a placeholder. 'Reload UI' reloads the UI.";}) end) -- **[UPDATED HOW TO USE TEXT]**
    keybindsTextBox.FocusLost:Connect(updateKeybinds)
    walkSpeedTextBox.FocusLost:Connect(function() -- Placeholder for future speed textbox logic if needed, currently handled in toggleWalkSpeedBoost
        local speedValue = tonumber(walkSpeedTextBox.Text)
        if not speedValue then
            walkSpeedTextBox.Text = "50" -- Revert to default if invalid input
            game.StarterGui:SetCore("SendNotification", {Title = "Invalid Speed"; Duration = 2; Text = "Speed value reset to default (50). Numbers only.";})
        end
    end)


    -- **Tooltip Mouse Events (for each button/tooltip pair)**
    invisButton.MouseEnter:Connect(function() tooltipLabel_invis.Visible = true end)
    invisButton.MouseLeave:Connect(function() tooltipLabel_invis.Visible = false end)
    unloadButton.MouseEnter:Connect(function() tooltipLabel_unload.Visible = true end)
    unloadButton.MouseLeave:Connect(function() tooltipLabel_unload.Visible = false end)
    debugButton.MouseEnter:Connect(function() tooltipLabel_debug.Visible = true end)
    debugButton.MouseLeave:Connect(function() tooltipLabel_debug.Visible = false end)
    hideUIButton.MouseEnter:Connect(function() tooltipLabel_hideUI.Visible = true end)
    hideUIButton.MouseLeave:Connect(function() tooltipLabel_hideUI.Visible = false end)
    methodButton1.MouseEnter:Connect(function() tooltipLabel_method1.Visible = true end)
    methodButton1.MouseLeave:Connect(function() tooltipLabel_method1.Visible = false end)
    methodButton2.MouseEnter:Connect(function() tooltipLabel_method2.Visible = true end) -- **[NEW Method 2 Tooltip Events]**
    methodButton2.MouseLeave:Connect(function() tooltipLabel_method2.Visible = false end)
    fakeCharacterButton.MouseEnter:Connect(function() tooltipLabel_fakeCharacter.Visible = true end)
    fakeCharacterButton.MouseLeave:Connect(function() tooltipLabel_fakeCharacter.Visible = false end)
    keybindToggleButton.MouseEnter:Connect(function() tooltipLabel_keybindToggle.Visible = true end)
    keybindToggleButton.MouseLeave:Connect(function() tooltipLabel_keybindToggle.Visible = false end)
    walkSpeedBoostButton.MouseEnter:Connect(function() tooltipLabel_walkSpeedBoost.Visible = true end)
    walkSpeedBoostButton.MouseLeave:Connect(function() tooltipLabel_walkSpeedBoost.Visible = false end)
    keybindsTextBox.MouseEnter:Connect(function() tooltipLabel_keybindsTextBox.Visible = true end) -- **[NEW] Keybinds Textbox Tooltip Events**
    keybindsTextBox.MouseLeave:Connect(function() tooltipLabel_keybindsTextBox.Visible = false end)
    walkSpeedTextBox.MouseEnter:Connect(function() tooltipLabel_walkSpeedTextBox.Visible = true end) -- **[NEW] Walk Speed Textbox Tooltip Events**
    walkSpeedTextBox.MouseLeave:Connect(function() tooltipLabel_walkSpeedTextBox.Visible = false end)
    noclipButton.MouseEnter:Connect(function() tooltipLabel_noclip.Visible = true end) -- **[NEW] NoClip Button Tooltip Events**
    noclipButton.MouseLeave:Connect(function() tooltipLabel_noclip.Visible = false end)
    serverInvisButton.MouseEnter:Connect(function() tooltipLabel_serverInvis.Visible = true end) -- **[NEW Admin Button Tooltip Events]**
    serverInvisButton.MouseLeave:Connect(function() tooltipLabel_serverInvis.Visible = false end)


    -- **Keybind Input Handling**
    userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
        if not gameProcessedEvent and keybind_enabled then
            local keyCode = input.KeyCode
            if keyCode == keybinds.toggle_invis then
                toggleInvisibility()
            elseif keyCode == keybinds.toggle_fake_character then
                toggleFakeCharacter()
            elseif keyCode == keybinds.hide_ui then
                toggleUIHide()
            elseif keyCode == keybinds.toggle_walkspeed_boost then
                toggleWalkSpeedBoost()
            elseif keyCode == keybinds.toggle_noclip then -- **[NEW - NoClip Keybind]**
                toggleNoClip()
            elseif keyCode == keybinds.load_ui then -- **[NEW - Load UI Keybind]**
                loadInvisUI()
            elseif keyCode == keybinds.switch_method then -- **[NEW - Switch Method Keybind]**
                setMethod(current_method == 1 and 2 or 1) -- Toggle between method 1 and 2
            end
        end
    end)

    -- **Initial Textbox Text Setup:** Set textbox text to current keybinds at UI load
    local initialKeybindText = ""
    local keyNames = {"toggle_invis", "toggle_fake_character", "hide_ui", "toggle_walkspeed_boost", "toggle_noclip", "switch_method", "load_ui"} -- **[UPDATED KEYNAMES]**
    for i, name in ipairs(keyNames) do
        initialKeybindText = initialKeybindText .. keybinds[name].Name .. (i < #keyNames and "," or "")
    end
    keybindsTextBox.Text = initialKeybindText


    if DEBUG_MODE then print("LoadInvisUI: UI Load complete. Version: " .. scriptVersion) end -- **[NEW] Version in Debug Print**
    game.StarterGui:SetCore("SendNotification", {
        Title = "Invis UI Loaded " .. scriptVersion; -- **[NEW] Version in Load Notification**
        Duration = 2;
        Text = "Invisibility UI loaded successfully!";
    })

end


-- **Load UI on L Key Press Directly**
userInputService.InputBegan:Connect(function(input, gameProcessedEvent)
    if not gameProcessedEvent and input.KeyCode == keybinds.load_ui then
        loadInvisUI()
    end
end)


if DEBUG_MODE then print("Invis Script Initialized. Press 'L' to load UI. Version: " .. scriptVersion) end -- **[NEW] Version in Init Message**
game.StarterGui:SetCore("SendNotification", {
    Title = "Invis Script Loaded " .. scriptVersion; -- **[NEW] Version in Notification**
    Duration = 3;
    Text = "Press 'L' to load the Invisibility UI."; -- Updated message!
})
