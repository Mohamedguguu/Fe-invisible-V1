local ScriptStarted = false
local Keybind = "E"
local Transparency = true
local NoClip = false

local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local SoundService = game:GetService("SoundService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local IsInvisible = false
local CanInvis = true
local AnchorPart
local FakeCharacter
local PseudoAnchor
local RealCharacter

-- Waits for HumanoidRootPart to exist
local function GetHumanoidRootPart(character)
    local tries = 0
    while character and not character:FindFirstChild("HumanoidRootPart") and tries < 40 do
        tries = tries + 1
        character.ChildAdded:Wait()
    end
    return character and character:FindFirstChild("HumanoidRootPart")
end

function CleanUpFake()
    if FakeCharacter then pcall(function() FakeCharacter:Destroy() end) end
    if AnchorPart then pcall(function() AnchorPart:Destroy() end) end
    FakeCharacter = nil
    AnchorPart = nil
end

function CreateFakeCharacter()
    CleanUpFake()
    if not RealCharacter then warn("No RealCharacter!"); return end
    local rootPart = GetHumanoidRootPart(RealCharacter)
    if not rootPart then warn("HumanoidRootPart not found in RealCharacter!"); return end

    RealCharacter.Archivable = true
    FakeCharacter = RealCharacter:Clone()
    FakeCharacter.Parent = workspace

    -- Anchor part above the real character
    AnchorPart = Instance.new("Part")
    AnchorPart.Anchored = true
    AnchorPart.Size = Vector3.new(10, 1, 10)
    AnchorPart.CFrame = rootPart.CFrame * CFrame.new(0, 50, 0)
    AnchorPart.Transparency = 1
    AnchorPart.CanCollide = false
    AnchorPart.Parent = workspace

    FakeCharacter:MoveTo(AnchorPart.Position + Vector3.new(0, 5, 0))

    -- Optionally, set noclip
    if NoClip and FakeCharacter:FindFirstChildWhichIsA("Humanoid") then
        FakeCharacter:FindFirstChildWhichIsA("Humanoid"):ChangeState(11)
    end

    -- Set transparency
    if Transparency then
        for _, v in pairs(FakeCharacter:GetDescendants()) do
            if v:IsA("BasePart") then
                v.Transparency = 0.7
            end
        end
    end

    -- Disable LocalScripts
    for _, v in pairs(FakeCharacter:GetChildren()) do
        if v:IsA("LocalScript") then
            v.Disabled = true
        end
    end

    PseudoAnchor = FakeCharacter:FindFirstChild("HumanoidRootPart")
end

function OnCharacterDied()
    CanInvis = false
    CleanUpFake()
end

function Invisible()
    if not FakeCharacter or not RealCharacter then return end
    local realRoot = RealCharacter:FindFirstChild("HumanoidRootPart")
    local fakeRoot = FakeCharacter:FindFirstChild("HumanoidRootPart")
    if not realRoot or not fakeRoot then warn("Missing HumanoidRootPart for swap!"); return end

    if not IsInvisible then
        -- Swap positions
        local storedCF = realRoot.CFrame
        realRoot.CFrame = fakeRoot.CFrame
        fakeRoot.CFrame = storedCF

        if RealCharacter:FindFirstChildWhichIsA("Humanoid") then
            RealCharacter:FindFirstChildWhichIsA("Humanoid"):UnequipTools()
        end
        Player.Character = FakeCharacter
        workspace.CurrentCamera.CameraSubject = FakeCharacter:FindFirstChildWhichIsA("Humanoid")

        -- Enable scripts in fake char
        for _, v in pairs(FakeCharacter:GetChildren()) do
            if v:IsA("LocalScript") then
                v.Disabled = false
            end
        end

        IsInvisible = true
    else
        -- Swap back
        local storedCF = fakeRoot.CFrame
        fakeRoot.CFrame = realRoot.CFrame
        realRoot.CFrame = storedCF

        if FakeCharacter:FindFirstChildWhichIsA("Humanoid") then
            FakeCharacter:FindFirstChildWhichIsA("Humanoid"):UnequipTools()
        end
        Player.Character = RealCharacter
        workspace.CurrentCamera.CameraSubject = RealCharacter:FindFirstChildWhichIsA("Humanoid")

        -- Disable scripts in fake char
        for _, v in pairs(FakeCharacter:GetChildren()) do
            if v:IsA("LocalScript") then
                v.Disabled = true
            end
        end

        IsInvisible = false
    end
end

-- Setup
local function SetupCharacter(char)
    RealCharacter = char
    CreateFakeCharacter()
    local humanoid = RealCharacter:FindFirstChildWhichIsA("Humanoid")
    if humanoid then
        humanoid.Died:Connect(OnCharacterDied)
    end
end

if Player.Character then
    SetupCharacter(Player.Character)
end

Player.CharacterAdded:Connect(function(char)
    SetupCharacter(char)
end)

UserInputService.InputBegan:Connect(function(input, processed)
    if processed then return end
    if input.KeyCode.Name:lower() == Keybind:lower() and CanInvis then
        Invisible()
    end
end)

RunService.RenderStepped:Connect(function()
    if PseudoAnchor and AnchorPart then
        PseudoAnchor.CFrame = AnchorPart.CFrame * CFrame.new(0, 5, 0)
    end
end)

-- Notification and sound
local Sound = Instance.new("Sound", SoundService)
Sound.SoundId = "rbxassetid://232127604"
Sound:Play()
StarterGui:SetCore("SendNotification", {
    Title = "Invisible Toggle Loaded",
    Text = "Press "..Keybind.." to change visibility.",
    Duration = 20,
    Button1 = "Okay."
})
